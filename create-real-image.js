// Criar uma imagem PNG real para o comprovante
const fs = require('fs');
const path = require('path');

function createRealImage() {
  console.log('üñºÔ∏è Criando imagem PNG real...');

  try {
    // Dados de uma imagem PNG v√°lida (100x100 pixels, azul)
    const pngData = Buffer.from([
      // PNG signature
      0x89, 0x50, 0x4E, 0x47, 0x0D, 0x0A, 0x1A, 0x0A,
      // IHDR chunk
      0x00, 0x00, 0x00, 0x0D, 0x49, 0x48, 0x44, 0x52,
      0x00, 0x00, 0x00, 0x64, 0x00, 0x00, 0x00, 0x64,
      0x08, 0x02, 0x00, 0x00, 0x00, 0xFF, 0x80, 0x02, 0x03,
      // IDAT chunk (compressed image data)
      0x00, 0x00, 0x00, 0x16, 0x49, 0x44, 0x41, 0x54,
      0x78, 0x9C, 0x62, 0x64, 0x60, 0x60, 0x00, 0x82,
      0x40, 0x01, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x03,
      0x00, 0x00, 0x06, 0x00, 0x05, 0x1B, 0xF6, 0x43, 0x7D,
      // IEND chunk
      0x00, 0x00, 0x00, 0x00, 0x49, 0x45, 0x4E, 0x44,
      0xAE, 0x42, 0x60, 0x82
    ]);

    const uploadDir = path.join(process.cwd(), 'public', 'uploads', 'proofs');
    const imagePath = path.join(uploadDir, 'test-comprovante-email.png');

    // Salvar a imagem
    fs.writeFileSync(imagePath, pngData);
    console.log('‚úÖ Imagem PNG criada:', imagePath);

    return imagePath;
  } catch (error) {
    console.error('‚ùå Erro ao criar imagem:', error);
    return null;
  }
}

// Executar
const imagePath = createRealImage();
if (imagePath) {
  console.log('üéØ Imagem criada com sucesso!');
}